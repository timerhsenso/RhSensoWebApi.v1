@{
    ViewData["Title"] = "Botões";
    Layout = "_Layout";
}

<h2 class="mb-3">Botões</h2>

<div class="row g-2 mb-3">
    <div class="col-auto">
        <input id="filtroSistema" class="form-control" placeholder="Sistema (ex: SEG)" />
    </div>
    <div class="col-auto">
        <input id="filtroFuncao" class="form-control" placeholder="Função (ex: USU/ACESSO)" />
    </div>
    <div class="col-auto">
        <button id="btnNovo" class="btn btn-primary">Novo</button>
    </div>
</div>

<table id="tabela" class="table table-striped table-hover w-100">
    <thead>
        <tr>
            <th>Código</th>
            <th>Sistema</th>
            <th>Função</th>
            <th>Nome</th>
            <th>Descrição</th>
            <th style="width:120px">Ação</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

@section Styles {
    <!-- Bootstrap + DataTables (CDN, simples e confiável) -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/v/bs5/dt-2.0.8/datatables.min.css" />
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.datatables.net/v/bs5/dt-2.0.8/datatables.min.js"></script>

    <script>
        (function () {
          const $t = $('#tabela');

          if ($.fn.DataTable.isDataTable($t)) {
            $t.DataTable().destroy();
          }

          $t.DataTable({
            processing: true,
            serverSide: true,
            ajax: {
              // Se você usa endpoint do MVC (proxy), mantenha sua rota atual:
              url: '/seg/botoes/GetData',
              type: 'GET',
              // Suporta tanto { data: [...] } quanto array direto:
              dataSrc: function (json) { return json?.data ?? json; }
            },
            columns: [
              { data: "id", visible: false },            // agora SEM ERRO: id existe (Base64Url)
              { data: "codigoSistema", title: "Sistema" },
              { data: "codigoFuncao",  title: "Função"  },
              { data: "nome",          title: "Botão"   },
              { data: "descricao",     title: "Descrição" },
              { data: "acao",          title: "Ação" },
              {
                title: "Operações",
                orderable: false,
                searchable: false,
                render: function (_, __, row) {
                  const key = encodeURIComponent(row.id); // Id seguro Base64Url
                  return `
                    <div class="btn-group btn-group-sm" role="group">
                      <a class="btn btn-outline-primary" href="/seg/botoes/editar?key=${key}">Editar</a>
                      <button class="btn btn-outline-danger" data-key="${key}" onclick="excluirBotao(this)">Excluir</button>
                    </div>`;
                }
              }
            ],
            order: [[1, 'asc'], [2, 'asc'], [3, 'asc']],
            searchDelay: 400 // debounce simples
          });
        })();

        async function excluirBotao(btn){
          const key = btn.getAttribute('data-key');
          if(!confirm('Confirmar exclusão?')) return;
          try{
            const resp = await fetch('/seg/botoes/delete', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
              },
              body: JSON.stringify({ key }) // você decodifica no server (Base64Url → "SEG|...|NOME")
            });
            if(!resp.ok){ throw new Error('Falha ao excluir'); }
            $('#tabela').DataTable().ajax.reload(null, false);
          }catch(e){
            alert(e.message);
          }
        }
    </script>

}
